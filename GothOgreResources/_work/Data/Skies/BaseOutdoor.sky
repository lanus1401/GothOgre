//-------------------------------------------------------------------------------------------------
// BaseOutdoor - базовое небо - не содержит облаков, нет погодных эффектов
//-------------------------------------------------------------------------------------------------

Sky ("BaseOutdoor")
{
	// Цвет фона, на который накладывается все остальное
	Background( "Background" )
	{
		color( 0 0 0 ) // черный
	}
	
	// Туман (z-fog)
	Fog( "Fog" )
	{
		// Ближняя дистанция тумана (см). Ближе этого расстояния тумана нет.
		nearDistance( 20000 )
		
		// Дальняя дистанция тумана (см). Дальше этого расстояния туман 
		// полностью перекрашивает все объекты в свой цвет.
		farDistance( 20000 )
		
		// Цвет тумана. 
		// Эта строчка иногда может быть пропущена. (Например, при опредении погоды,
		// когда надо указать лишь дистанцию тумана, а цвет использовать из родительского неба).
		color( "255 180 180" )
	}

	// Атмосфера, т.е. воздух без облаков. Обычно голубого цвета.
	Atmosphere( "Atmosphere" )
	{
		// Индекс слоя.
		layer( 10 )

		// Атмосфера рисуется как полусфера, под которой дорисовывается цилиндр (без оснований).
		// Центр полусферы совпадает с центром верхнего (отсутствующего) основания цилиндра,
		// и с текущим положением камеры (этот меш перемещается вместе с камерой).
		// Полусфера накрывает камеру сверху, а цилиндр нужен для того, 
		// чтобы не было видно краев атмосферы, когда камера поднимается над
		// поверхностью земли (прыжки, полет). Таким образом, высота цилиндра должна быть 
		// больше любой достижимой высоты над поверхностью земли.
		geometry( RADIUS:50000 DEPTH:10000 )

		// Базовый цвет атмосферы - это цвет воздуха в отсутствии источников света,
		// т.е. безлунной ночью. Цвет указывается с альфа-каналом 
		// (Aтмосфера должна быть полупрозрачной, чтобы ночью были видны звезды.)
		baseColor( "50 0 0 10" )
	}
	
	// Небесное тело: солнце
	Body( "Sun" )
	{
		// Индекс слоя.
		// Элементы неба рендерятся в порядке возрастания этого индекса.
		layer( 11 )
		
		// Меш для небесного тела.
		visual( "Plane.3ds" )
		
		// Материал для небесного тела.
		material( "UnSun5" )
		{
			texture( "UnSun5.tga" )
			
			// 0 - означает отсутствие автоматической анимации; это значение по умолчанию,
			// так что строчка ниже может быть пропущена.
			texAniFPS( 0 )
		}

		// Дистанция от камеры до меша, изображающего небесное тело.
		distance( 2500 )
		
		// Координаты по умолчанию: высота, азимут.
		altitude( 90 )
		azimuth( 0 ) 

		// Масштаб
		scale( 1 1 1 )
		
		// Углы Эйлера (градусы)
		eulerAngles( 0 0 0 )
		
		// Относительная позиция
		position( 0 0 0 )
	}
	
	// "Двигатель" солнца - отвечает за его перемещение по небу
	BodyMover( "SunMover" )
	{
		bodyRef( "Sun" )
		
		// Значения по умолчанию, могут переопределяться (см. блоки Time)
		scale( 1 1 1 )
		eulerAngles( 0 0 0 )
		position( 0 0 0 )
		
		// Позиция небесного тела в указанный момент времени.
		// Может быть много блоков Time в одном опредении CelestialBody,
		// в промежуточные моменты времени параметры интерполируются.
		Time( "7:30" )
		{
			// Координаты небесного тела: высота, азимут (в градусах).
			altitude( 6 )
			azimuth( 86 ) 
			
			// Коэффициенты масштабирования.
			// scale( 1 1 1 )
			
			// Углы Эйлера - для вращения небесного тела вокруг собственной оси.
			// eulerAngles( 0 0 0 )			
		}
		Time( "13:30" )
		{
			altitude( 42 )
			azimuth( 42 180 ) 
		}
		Time( "19:30" )
		{
			altitude( 6 )
			azimuth( 274 ) 
		}
		Time( "1:30" )
		{
			altitude( -27 )
			azimuth( 0 ) 
		}
	}
	
	// Фазы солнца
	/*BodyPhase( "SunPhase" )
	{
		bodyRef( "Sun" )
		
		// Номер кадра по умолчанию; может быть переопределен для определенных моментов времени.
		frame( 0 )
		
		// Фазы небесного тела в указанные моменты времени 
		Time("8:00")
		{
			frame( 0 )
		}
	}*/
	
	// Свет от солнца
	BodyLight( "SunLight" )
	{
		bodyRef( "Sun" )
		
		// Свет от небесного тела по умолчанию. Может быть переопределен для конкретных значений
		// высоты (см. ниже блоки Altitude).
		ambientLight( ADD:"0 0 0" )
		diffuseLight( ADD:"0 0 0" )
		specularLight( ADD:"0 0 0" )

		// Модификаторы цветов и освещения, в зависимости от высоты небесного тела над горизонтом.
		// Может быть много блоков Altitude в одном опредении CelestialBody,
		// для промежуточных значений высоты параметры интерполируются.
		Altitude( 90 ) // В зените
		{
			// Модификатор рассеянного освещения
			ambientLight( ADD:"128 128 128" )
			
			// Модификатор диффузного освещения
			diffuseLight( ADD:"255 255 255" )

			// Модификатор бликового освещения
			specularLight( ADD:"255 255 255" )
		}

		Altitude( 15 ) // Перед закатом / После восхода
		{
			ambientLight(  ADD:"128 40 40" )
			diffuseLight(  ADD:"200 200 200" )
			specularLight( ADD:"200 200 200" )
		}

		Altitude( -15 ) // После заката / перед восходом
		{
			ambientLight(  ADD:"100 25 25" )
			diffuseLight(  ADD:"100 100 100" )
			specularLight( ADD:"100 100 100" )
		}
		
		Altitude( -90 ) // В надире
		{
			ambientLight(  ADD:"0 0 0" )
			diffuseLight(  ADD:"0 0 0" )
			specularLight( ADD:"0 0 0" )
		}
	}
	
	// Окрашивание материалов в зависимости от движения солнца
	BodyColorizer( "SunColorizer" )
	{
		bodyRef( "Sun" )
				
		MaterialColor( "sun" )
		{
			materialRef( "UnSun5" )
			color( MUL:"255 255 255 255" ADD:"0 0 0 0" )
		}
		AtmosphereColor( "atm" )
		{
			atmosphereRef( "Atmosphere" )
		}
	
		// Модификаторы цветов, в зависимости от высоты небесного тела над горизонтом;
		// для промежуточных значений высоты параметры интерполируются.
		Altitude( 90 ) // В зените
		{
			// Изменение цвета небесного тела.
			MaterialColor( "sun" )
			{
				color( MUL:"255 255 255 255" ADD:"0 0 0 0" )
			}
			
			// Изменение цвета атмосферы в точке, направление на которую образует
			// указанный угол с направлением на небесное тело.
			// Для всех остальных углов, кроме указанных, цвет интерполируется.
			AtmosphereColor( "atm" )
			{
				Angle( 0 )
				{
					color( ADD:"255 255 255 255" )
				}
				Angle( 45 )
				{
					color( ADD:"150 150 150 255" )
				}
				Angle( 90 )
				{
					color( ADD:"130 130 130 255" )
				}
				Angle( 135 )
				{
					color( ADD:"100 100 100 255" )
				}
			}
		}

		Altitude( 15 ) // Перед закатом / После восхода
		{
			MaterialColor( "sun" )
			{
				color( MUL:"255 222 220 255" ADD:"0 0 0 0" )
			}

			AtmosphereColor( "atm" )
			{
				Angle( 0 )
				{
					color( ADD:"255 120 120 255" )
				}
				Angle( 45 )
				{
					color( ADD:"200 100 100 255" )
				}
				Angle( 90 )
				{
					color( ADD:"120 80 80 255" )
				}
				Angle( 135 )
				{
					color( ADD:"90 60 60 255" )
				}
				Angle( 180 )
				{
					color( ADD:"80 55 55 200" )
				}				
			}
		}

		Altitude( -15 ) // После заката / перед восходом
		{
			MaterialColor( "sun" )
			{
				color( MUL:"255 170 170 255" ADD:"0 0 0 0" )
			}
			
			AtmosphereColor
			{
				Angle( 0 )
				{
					color( ADD:"100 60 60 200" )
				}
				Angle( 45 )
				{
					color( ADD:"80 55 55 190" )
				}
				Angle( 90 )
				{
					color( ADD:"90 60 60 180" )
				}
				Angle( 135 )
				{
					color( ADD:"50 45 45 140" )
				}
				Angle( 180 )
				{
					color( ADD:"40 30 30 100" )
				}				
			}	
		}
		
		Altitude( -90 ) // В надире
		{
			MaterialColor( "sun" )
			{
				color( MUL:"0 0 0 0" ADD:"0 0 0 0" )
			}

			AtmosphereColor( "atm" )
			{
				Angle( 0 )
				{
					color( ADD:"0 0 0 0" )
				}
				Angle( 45 )
				{
					color( ADD:"0 0 0 0" )
				}
				Angle( 90 )
				{
					color( ADD:"0 0 0 0" )
				}
				Angle( 135 )
				{
					color( ADD:"0 0 0 0" )
				}
				Angle( 180 )
				{
					color( ADD:"0 0 0 0" )
				}				
			}			
		}
	}
	
	// Небесное тело: луна
	Body( "Moon" )
	{
		layer( 3 )
		distance( 1500 )
		visual( "Plane.3ds" )
		
		material( "Moon" )
		{
			texture( "Moon.tga" )
		}
	}
	
	// "Двигатель" луны по небу
	BodyMover( "MoonMover" )
	{
		bodyRef( "Moon" )
			
		Time( "19:30" )
		{
			altitude( 6 )
			azimuth( 86 ) 
		}
		Time( "1:30" )
		{
			altitude( 42 )
			azimuth( 180 ) 
		}
		Time( "7:30" )
		{
			altitude( 6 )
			azimuth( 274 ) 
		}
		Time( "13:30" )
		{
			altitude( -27 )
			azimuth( 0 ) 
		}
	}
	
	// Лунный свет
	BodyLight( "MoonLight" )
	{
		bodyRef( "Moon" )
		
		Altitude( 90 )
		{
			ambientLight(  ADD:"10 10 10" )
			diffuseLight(  ADD:"20 20 20" )
			specularLight( ADD:"20 20 20" )
		}
		Altitude( -90 )
		{
			ambientLight(  ADD:"0 0 0" )
			diffuseLight(  ADD:"0 0 0" )
			specularLight( ADD:"0 0 0" )
		}
	}
	
	// Звездное небо обрабатывается также, как слой облаков
	CloudLayer( "Starfield" )
	{
		layer( 1 )
		visual( "Skydome_Layer1.3ds" )
		
		Material( SkyNight_NewWorld_Layer0_A0 )
		{
			texture( "SkyNight_NewWorld_Layer0_A1.tga" )
			texAniMapDir( -0.001 0.001 )		
		}
	}
	
	// Свет звезд
	CloudLayerLight( "StarfieldLight")
	{
		cloudLayerRef( "Starfield" )
		ambientLight(ADD:"20 20 20")
	}
	
	/*
	// Подводные эффекты - отображаются, только когда камера под водой.
	UnderwaterEffects( "UnderwaterEffects" )
	{
		// Для каждой глубины (в см) можно задать свои эффекты
		Depth( 0 )
		{
			skyRef( "UnderwaterShallow.sky" )
			weight( 1.0 )
		}		
		Depth( 10000 )
		{
			skyRef( "UnderwaterDeep.sky" )
			weight( 1.0 )
		}
	}
	*/

	/*
	// Indoor-эффекты - используются, только когда камера внутри помещения.
	IndoorEffects( "IndoorEffects" )
	{
		// Для каждой глубины (безразмерная величина, формулы в документации) 
		// можно задать свои эффекты
		Depth( 0.8 )
		{
			skyRef( "IndoorEntrance.sky" )
			weight( 1.0 )
		}		
		Depth( 20 )
		{
			skyRef( "IndoorFarCorner.sky" )
			weight( 1.0 )
		}
	}
	*/
	
}
